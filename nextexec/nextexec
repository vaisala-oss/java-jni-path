#!/bin/sh
#
# Returns the location of the next executable in the path with a matching
# *basename*. This can be used to transparently proxy and modify shell
# executables
#
# Arguments:
# $1: Full path to the wrapping script
#
# Output (std.out):
# Full path to the next executable with a matching *basename*.
# If $1 is not in $PATH, prints the first match (i.e. `which $(basename $1)`).
scriptname=$(basename "$1")
result=""
found=0
for path in $(which -a "${scriptname}"); do
    if [ "${path}" = "$1" ]; then
        found=1
    elif [ $found -eq "1" ]; then
        result="${path}"
        break
    fi
done
if [ $found -eq 0 ] # script is not in PATH
then
   result=$(which "${scriptname}")
fi
printf %s "${result}"
